---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: authentik-secret
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: aws-ssm
  target:
    name: authentik-secret
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        # Authentik
        AUTHENTIK_SECRET_KEY: "{{ .AUTHENTIK_SECRET_KEY }}"
        AUTHENTIK_REDIS__HOST: authentik-redis.security.svc.cluster.local
        AUTHENTIK_POSTGRESQL__USER: &dbuser "{{ .AUTHENTIK_DATABASE_USER }}"
        AUTHENTIK_POSTGRESQL__PASSWORD: &dbpassword "{{ .AUTHENTIK_DATABASE_PASSWORD }}"
        AUTHENTIK_POSTGRESQL__HOST: homecluster-rw.database.svc.cluster.local
        AUTHENTIK_POSTGRESQL__NAME: &dbname authentik
        AUTHENTIK_EMAIL__USERNAME: "{{ .SMTP_SUPERUSER }}"
        AUTHENTIK_EMAIL__PASSWORD: "{{ .SMTP_SUPERUSER_PASSWORD }}"
        AUTHENTIK_BOOTSTRAP_EMAIL: "{{ .AUTHENTIK_BOOTSTRAP_EMAIL }}"
        AUTHENTIK_BOOTSTRAP_PASSWORD: "{{ .AUTHENTIK_BOOTSTRAP_PASSWORD }}"
        AUTHENTIK_BOOTSTRAP_TOKEN: "{{ .AUTHENTIK_BOOTSTRAP_TOKEN }}"
        AUTHENTIK_EMAIL__USE_TLS: "true"
        AUTHENTIK_EMAIL__PORT: "{{ .SMTP_TLS_PORT }}"
        AUTHENTIK_EMAIL__FROM: "auth@${SECRET_DOMAIN}"
        # Postgres Init
        INIT_POSTGRES_DBNAME: *dbname
        INIT_POSTGRES_HOST: homecluster-rw.database.svc.cluster.local
        INIT_POSTGRES_USER: *dbuser
        INIT_POSTGRES_PASS: *dbpassword
        INIT_POSTGRES_SUPER_PASS: "{{ .POSTGRES_SUPER_PASS }}"

  dataFrom:
    - extract:
        key: /bakerkubes/authentik
    - extract:
        key: /bakerkubes/cloudnative-pg
    - extract:
        key: /bakerkubes/email
